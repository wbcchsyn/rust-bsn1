var searchIndex = JSON.parse('{\
"bsn1":{"doc":"<code>bsn1</code> is a rust library to serialize/deserialize in ‘…","t":[0,5,5,5,5,5,3,3,3,3,4,13,13,13,13,3,3,4,13,13,4,13,13,4,13,13,13,13,13,13,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["contents","from_integer","to_integer","from_bool","to_bool_ber","to_bool_der","Ber","BerRef","Der","DerRef","ClassTag","Universal","Application","ContextSpecific","Private","Id","IdRef","PCTag","Primitive","Constructed","Length","Indefinite","Definite","Error","UnTerminatedBytes","RedundantBytes","OverFlow","IndefiniteLength","BadEoc","InvalidContents","constructed_ber","constructed_der","borrow","borrow_mut","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow","borrow_mut","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","borrow","borrow_mut","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","cmp","cmp","cmp","cmp","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","deref","deref","deref","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","try_from","try_from","try_from","try_from","from_bytes_unchecked","from_bytes_starts_with_unchecked","id","length","contents","new","from_id_iterator","boolean","integer","utf8_string","octet_string","into_vec","from_bytes_unchecked","from_bytes_starts_with_unchecked","id","length","contents","new","from_id_iterator","boolean","integer","utf8_string","octet_string","into_vec","from_bytes_unchecked","eoc","boolean","integer","bit_string","bit_string_constructed","octet_string","octet_string_constructed","null","object_identifier","object_descriptor","external","real","enumerated","embedded_pdv","utf8_string","utf8_string_constructed","relative_oid","sequence","set","numeric_string","numeric_string_constructed","printable_string","printable_string_constructed","t61_string","t61_string_constructed","videotex_string","videotex_string_constructed","ia5_string","ia5_string_constructed","utc_time","utc_time_constructed","generalized_time","generalized_time_constructed","graphic_string","graphic_string_constructed","visible_string","visible_string_constructed","general_string","general_string_constructed","universal_string","universal_string_constructed","character_string","character_string_constructed","bmp_string","bmp_string_constructed","class","is_universal","is_application","is_context_specific","is_private","pc","is_primitive","is_constructed","number","new","to_bytes"],"q":["bsn1","bsn1::contents","","","","","bsnd":["Provides functions to serialize/deserialize contents …","Serializes integer as contents octets.","Parses <code>bytes</code> as a contents of Integer.","Serializes boolean as contents octets.","Parses <code>bytes</code> as a BER contents of Bool.","Parses <code>bytes</code> as a DER contents of Bool.","<code>Ber</code> owns <code>BerRef</code> and represents a BER.","<code>BerRef</code> is a wrapper of <code>[u8]</code> and represents a BER.","<code>Der</code> owns <code>DerRef</code> and represents DER.","<code>DerRef</code> is a wrapper of <code>[u8]</code> and represents DER.","<code>ClassTag</code> represents Tag class of identifier.","Universal Tag","Application Tag","Context-Specific Tag","Private Tag","<code>Id</code> owns <code>IdRef</code> and represents Identifier.","<code>IdRef</code> is a wrapper of <code>[u8]</code> represents Identifier.","<code>PCTag</code> represents Private/Constructed flag of identifier.","Primitive data type.","Constructed data type.","<code>Length</code> represents ASN.1 length.","Represents ‘Indefinite’ length.","‘Definite’ is for ‘BER’, ‘DER’, and ‘CER’…","Errors for this crate.","The bytes finishes before the last octet.","The bytes includes some redundant octet(s). (‘ASN.1’ …","Over flow is occurred to parse bytes as a number.","‘Indefinite length’ used in DER or CER. (It is only …","The contents of ‘EOC’ of the ‘Indefinite Length BER…","The contents includes some invalid octet(s).","Builds a <code>Ber</code> instance representing Constructed BER …","Builds a <code>Der</code> instance representing ‘Constructed DER’ …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parses <code>bytes</code> starting with octets of ‘ASN.1 BER’ and …","Parses <code>bytes</code> starting with DER octets and builds a new …","Parses <code>bytes</code> starts with identifier octets and tries to …","Parses <code>bytes</code> starting with length octets and returns a …","Provides a reference from <code>bytes</code> without any sanitization.","Provides a reference from <code>bytes</code> that starts with a BER …","Provides a reference to <code>IdRef</code> of <code>self</code> .","Returns <code>Length</code> of <code>self</code> .","Provides a reference to the ‘contents’ octets of <code>self</code> …","Creates a new instance from <code>id</code> and <code>contents</code> with definite …","Creates a new instance from <code>id</code> and <code>contents</code> .","Returns a new instance representing boolean.","Returns a new instance representing ingeger.","Returns a new instance representing utf8_string.","Returns a new instance representing octet_string.","Consumes <code>self</code> , returning <code>Vec</code> .","Provides a reference from <code>bytes</code> without any sanitization.","Provides a reference from <code>bytes</code> that starts with a DER.","Returns a reference to <code>IdRef</code> of <code>self</code> .","Returns <code>Length</code> to represent the length of contents.","Returns a reference to the contents octets of <code>self</code> .","Creates a new instance from <code>id</code> and <code>contents</code> .","Creates a new instance from <code>id</code> and <code>contents</code> .","Returns a new instance representing boolean.","Returns a new instance representing ingeger.","Returns a new instance representing utf8_string.","Returns a new instance representing octet_string.","Consumes <code>self</code> , returning <code>Vec</code> .","Provides a reference from <code>bytes</code> without any sanitize. …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Provides a reference to <code>IdRef</code> representing ‘Universal …","Returns <code>ClassTag</code> of <code>self</code> .","Returns <code>true</code> if <code>self</code> is ‘Universal’ class, or <code>false</code> .","Returns <code>true</code> if <code>self</code> is ‘Application’ class, or <code>false</code> …","Returns <code>true</code> if <code>self</code> is ‘Context Specific’ class, or …","Returns <code>true</code> if <code>self</code> is ‘Private’ class, or <code>false</code> .","Returns the Primitive/Constructed flag of <code>self</code> .","Returns <code>true</code> if <code>self</code> is flagged as ‘Primitive’, or …","Returns <code>true</code> if <code>self</code> is flagged as ‘Constructed’, or …","Returns the number of <code>self</code> unless overflow.","Creates a new instance from <code>class</code> , <code>pc</code> , and <code>number</code> .","Serializes <code>length</code> ."],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,2,2,0,3,3,0,4,4,4,4,4,4,0,0,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,8,8,8,8,8,8,8,8,8,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,9,9,9,10,10,10,10,10,10,10,10,10,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,6,6,7,8,8,9,10,10,6,6,6,8,6,8,1,2,10,3,4,1,2,9,10,5,5,6,6,7,7,8,8,1,2,9,9,10,10,3,3,4,1,2,9,10,5,7,9,6,8,10,5,6,7,8,1,2,9,10,3,4,4,1,2,9,10,3,4,5,6,6,7,8,8,9,10,10,6,8,10,3,5,5,5,5,5,6,6,6,6,6,6,6,7,7,7,7,7,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,3],"f":[null,[[["i128",15]]],[[],[["error",4],["result",4],["i128",15]]],[[["bool",15]]],[[],[["bool",15],["result",4],["error",4]]],[[],[["bool",15],["result",4],["error",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["berref",3]],[[]],[[]],[[],["derref",3]],[[]],[[]],[[],["idref",3]],[[["derref",3]]],[[["der",3]]],[[["berref",3]]],[[["derref",3]]],[[],["ber",3]],[[],["der",3]],[[],["classtag",4]],[[],["pctag",4]],[[],["id",3]],[[],["length",4]],[[],["error",4]],[[["classtag",4]],["ordering",4]],[[["pctag",4]],["ordering",4]],[[["idref",3]],["ordering",4]],[[["id",3]],["ordering",4]],[[["berref",3]],["bool",15]],[[["berref",3]],["bool",15]],[[["ber",3]],["bool",15]],[[["ber",3]],["bool",15]],[[["derref",3]],["bool",15]],[[["derref",3]],["bool",15]],[[["der",3]],["bool",15]],[[["der",3]],["bool",15]],[[["classtag",4]],["bool",15]],[[["pctag",4]],["bool",15]],[[["idref",3]],["bool",15]],[[["idref",3]],["bool",15]],[[["id",3]],["bool",15]],[[["id",3]],["bool",15]],[[["length",4]],["bool",15]],[[["length",4]],["bool",15]],[[["error",4]],["bool",15]],[[["classtag",4]],[["ordering",4],["option",4]]],[[["pctag",4]],[["ordering",4],["option",4]]],[[["idref",3]],[["ordering",4],["option",4]]],[[["id",3]],[["ordering",4],["option",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["berref",3]],[[]],[[]],[[],["derref",3]],[[]],[[]],[[],["idref",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["idref",3]],[[],["length",4]],[[]],[[["idref",3]]],[[["idref",3]]],[[["bool",15]]],[[["i128",15]]],[[["str",15]]],[[]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[],["idref",3]],[[],["length",4]],[[]],[[["idref",3]]],[[["idref",3]]],[[["bool",15]]],[[["i128",15]]],[[["str",15]]],[[]],[[],[["vec",3],["u8",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["classtag",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["pctag",4]],[[],["bool",15]],[[],["bool",15]],[[],[["result",4],["u128",15],["error",4]]],[[["u128",15],["classtag",4],["pctag",4]]],[[]]],"p":[[4,"ClassTag"],[4,"PCTag"],[4,"Length"],[4,"Error"],[3,"BerRef"],[3,"Ber"],[3,"DerRef"],[3,"Der"],[3,"IdRef"],[3,"Id"]]}\
}');
initSearch(searchIndex);